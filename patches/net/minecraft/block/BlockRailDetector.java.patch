--- ../src-base/minecraft/net/minecraft/block/BlockRailDetector.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRailDetector.java
@@ -1,5 +1,6 @@
 package net.minecraft.block;
 
+import carpet.helpers.ITTCrasher;
 import com.google.common.base.Predicate;
 import java.util.List;
 import java.util.Random;
@@ -23,7 +24,10 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockRailDetector extends BlockRailBase
+import redstone.multimeter.block.Meterable;
+import redstone.multimeter.block.PowerSource;
+
+public class BlockRailDetector extends BlockRailBase implements Meterable /* RSMM */, PowerSource /* RSMM */, ITTCrasher /* VasCM - calmITTCrashers */
 {
     public static final PropertyEnum<BlockRailBase.EnumRailDirection> field_176573_b = PropertyEnum.<BlockRailBase.EnumRailDirection>func_177708_a("shape", BlockRailBase.EnumRailDirection.class, new Predicate<BlockRailBase.EnumRailDirection>()
     {
@@ -220,6 +224,14 @@
 
                 switch ((BlockRailBase.EnumRailDirection)p_185499_1_.func_177229_b(field_176573_b))
                 {
+                    //added due to somebody forgetting to add it at mojang
+                    case NORTH_SOUTH:
+                        return p_185499_1_.func_177226_a(field_176573_b, BlockRailBase.EnumRailDirection.NORTH_SOUTH);
+
+                    //added due to somebody forgetting to add it at mojang
+                    case EAST_WEST:
+                        return p_185499_1_.func_177226_a(field_176573_b, BlockRailBase.EnumRailDirection.EAST_WEST);
+
                     case ASCENDING_EAST:
                         return p_185499_1_.func_177226_a(field_176573_b, BlockRailBase.EnumRailDirection.ASCENDING_WEST);
                     case ASCENDING_WEST:
@@ -352,4 +364,22 @@
     {
         return new BlockStateContainer(this, new IProperty[] {field_176573_b, field_176574_M});
     }
+
+    // RSMM
+    @Override
+    public boolean rsmm$isActive(World world, BlockPos pos, IBlockState state) {
+        return state.func_177229_b(field_176574_M);
+    }
+
+    // RSMM
+    @Override
+    public int rsmm$getPowerLevel(World world, BlockPos pos, IBlockState state) {
+        return state.func_177229_b(field_176574_M) ? MAX_POWER : MIN_POWER;
+    }
+
+    @Override
+    public boolean wouldCrash(World world, BlockPos pos, IBlockState state) {
+        List<?> list = this.func_176571_a(world, pos, EntityMinecart.class);
+        return !list.isEmpty();
+    }
 }
